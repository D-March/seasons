{"version":3,"sources":["SeasonDisplay.js","Loader.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Loader","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+LAGMA,G,MAAe,CACjBC,OAAQ,CACJC,KAAM,sCACNC,SAAU,eAEdC,OAAQ,CACJF,KAAM,sCACNC,SAAU,eAyBHE,EAbO,SAACC,GACnB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIH,EAEFP,EAAaS,GAAhCP,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,SAEd,OACI,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,wBAAIS,UAAS,eAAkBV,GAC/B,uBAAGU,UAAS,6BAAwBT,EAAxB,aC5BlBU,EAAS,SAACP,GACZ,OACI,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBAAsBN,EAAMQ,WAKvDD,EAAOE,aAAe,CAClBD,QAAS,cAGED,QCTTG,E,4MACFC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,kEAEd,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,+BAK/C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAChC,uCAAaqB,KAAKX,MAAMC,eAG9BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAChC,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAGnC,kBAAC,EAAD,CAAQO,QAAQ,sC,GAnBbe,IAAMC,WAuBxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.55790e2d.chunk.js","sourcesContent":["import \"./SeasonDisplay.css\";\r\nimport React from \"react\";\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: \"Get that sunscreen, its a scorcher!\",\r\n        iconName: \"sun outline\",\r\n    },\r\n    winter: {\r\n        text: \"Better grab a coat, winter is here!\",\r\n        iconName: \"snowflake\",\r\n    },\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) {\r\n        return lat > 0 ? \"summer\" : \"winter\";\r\n    } else {\r\n        return lat > 0 ? \"winter\" : \"summer\";\r\n    }\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const { text, iconName } = seasonConfig[season];\r\n\r\n    return (\r\n        <div className={`season-display ${season}`}>\r\n            <i className={`icon-left massive ${iconName} icon`} />\r\n            <h1 className={`season-text`}>{text}</h1>\r\n            <i className={`icon-right massive ${iconName} icon`} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoader.defaultProps = {\r\n    message: \"Loading...\",\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonDisplay from \"./SeasonDisplay\";\r\nimport Loader from \"./Loader\";\r\n\r\nclass App extends React.Component {\r\n    state = { lat: null, errorMessage: \"\" };\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => this.setState({ lat: position.coords.latitude }),\r\n            (err) => this.setState({ errorMessage: err.message })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorMessage && !this.state.lat) {\r\n            return <div>Error: {this.state.errorMessage}</div>;\r\n        }\r\n\r\n        if (!this.state.errorMessage && this.state.lat) {\r\n            return <SeasonDisplay lat={this.state.lat} />;\r\n        }\r\n\r\n        return <Loader message=\"Please allow location request\" />;\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}